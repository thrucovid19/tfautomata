# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

base_image: &base_image
  hashicorp/terraform:light

working_directory: &working_directory
  ~/project

defaults: &defaults
    docker:
      - image: *base_image
    working_directory: *working_directory
    environment:
      TF_IN_AUTOMATION: true

set_terraform_environment: &set_terraform_environment
  run:
    name: set terraform environment
    command: cd ~/project/

jobs:
  terraform-init:
    <<: *defaults
    steps:
      - checkout
      - *set_terraform_environment
      - run:
          name: init
          command: terraform init -input=false
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  terraform-plan:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *set_terraform_environment
      - run:
         name: plan
         command: terraform plan -out=plan.tfplan -input=false
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  terraform-apply-approval:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *set_terraform_environment
      - run:
         name: apply
         command: terraform apply -input=false -auto-approve plan.tfplan
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  terraform-destroy-approval:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *set_terraform_environment
      - run:
         name: destory
         command: terraform destroy -auto-approve
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

workflows:
   version: 2
   install-and-check-env:
     jobs:
        - terraform-init:
           filters:
             branches:
               only: master
        - terraform-plan:
           requires:
             - terraform-init
        - hold-for-approval:
           type: approval
           requires:
             - terraform-plan
        - terraform-apply-approval:
           requires:
             - hold-for-approval
        - hold-for-destroy-approval:
           type: approval
           requires:
             - terraform-apply-approval
        - terraform-destroy-approval:
           requires:
             - hold-for-destroy-approval
